@group(0)
@binding(0)
var<storage, read> a: array<f32>;

@group(0)
@binding(1)
var<storage, read> b: array<f32>;

@group(0)
@binding(2)
var<storage, read_write> out: array<f32>;

const workgroup_size: vec3<u32> = vec3<u32>(16, 16, 1);
@workgroup_size(16, 16, 1)
@compute
fn main(
@builtin(local_invocation_id) lid: vec3<u32>,
@builtin(num_workgroups) num_wgs: vec3<u32>,
@builtin(workgroup_id) wid: vec3<u32>,
) {
var alen = 14u;
var blen = 4u;
var tidx = wid.x * workgroup_size.x + lid.x;
out[tidx] = alen * blen;

}